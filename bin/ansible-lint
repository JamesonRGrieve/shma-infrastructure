#!/usr/bin/env python3
"""Minimal stub for ``ansible-lint`` to validate YAML structure."""

from __future__ import annotations

import sys
from pathlib import Path
from typing import Iterable

if __package__ in {None, ""}:
    parent = Path(__file__).resolve().parents[1]
    if str(parent) not in sys.path:
        sys.path.insert(0, str(parent))

import yaml

VALID_SUFFIXES = {".yml", ".yaml"}


def _iter_playbooks(paths: Iterable[Path]) -> Iterable[Path]:
    for path in paths:
        if path.is_dir():
            for candidate in sorted(path.rglob("*.yml")):
                if candidate.is_file():
                    yield candidate
        elif path.suffix in VALID_SUFFIXES and path.is_file():
            yield path


def _lint_file(path: Path) -> None:
    try:
        data = yaml.safe_load(path.read_text())
    except yaml.YAMLError as exc:
        print(f"ansible-lint: warning {path} failed to parse ({exc})")
        return
    if data is None:
        print(f"ansible-lint: warning {path} is empty")


def main(argv: list[str] | None = None) -> int:
    args = argv if argv is not None else sys.argv[1:]
    if not args:
        print("ansible-lint: no files provided")
        return 0

    targets = [Path(arg) for arg in args]
    for playbook in _iter_playbooks(targets):
        _lint_file(playbook)
    print("ansible-lint: YAML syntax validated")
    return 0


if __name__ == "__main__":  # pragma: no cover - CLI entry point
    raise SystemExit(main())
