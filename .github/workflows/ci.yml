name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-and-validate:
    name: "Lint and validate (${{ matrix.lane }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lane: [stable, latest]
        include:
          - lane: stable
            kubectl_version: v1.29.3
            kind_image: kindest/node:v1.29.3
          - lane: latest
            kubectl_version: v1.30.0
            kind_image: kindest/node:v1.30.0
    env:
      SAMPLE_SERVICE_ID: sample-service
    steps:
      - name: Checkout
        uses: actions/checkout@9bb561d33b5b7c63f00a615b73d2be5c648ebc62

      - name: Set up Python
        uses: actions/setup-python@13f5f90d8d8c77c1b39979f68de0b44b4540a0ec
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ci/requirements.txt

      - name: Install Ansible collections
        run: ansible-galaxy collection install -r ci/collections-${{ matrix.lane }}.yml

      - name: Verify Docker Compose availability
        run: docker compose version

      - name: Install kubectl
        env:
          KUBECTL_VERSION: ${{ matrix.kubectl_version }}
        run: |
          curl -Lo kubectl "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          curl -Lo kubectl.sha256 "https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check -
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - name: Install kind
        env:
          KIND_VERSION: v0.23.0
        run: |
          curl -Lo kind "https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64"
          curl -Lo kind.sha256sum "https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-amd64.sha256sum"
          grep "kind-linux-amd64" kind.sha256sum > kind-linux-amd64.sha256
          sha256sum --check kind-linux-amd64.sha256
          chmod +x kind
          sudo mv kind /usr/local/bin/kind

      - name: Validate schema definition
        run: python ci/validate_schema.py

      - name: Run yamllint
        run: |
          yamllint roles/common schemas templates/proxmox.yml.j2 templates/docker.yml.j2 templates/kubernetes.yml.j2 tests

      - name: Run ansible-lint
        run: ansible-lint roles/common tests/render.yml

      - name: Render Proxmox configuration
        run: ansible-playbook tests/render.yml -e runtime=proxmox

      - name: Validate Proxmox manifest
        run: yamllint /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/proxmox.yml

      - name: Render Docker Compose configuration
        run: ansible-playbook tests/render.yml -e runtime=docker

      - name: Validate Docker Compose manifest
        run: docker compose -f /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/docker.yml config

      - name: Render Podman Quadlet configuration
        run: ansible-playbook tests/render.yml -e runtime=podman

      - name: Validate Quadlet unit
        run: systemd-analyze verify /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/podman.yml

      - name: Render bare-metal systemd configuration
        run: ansible-playbook tests/render.yml -e runtime=baremetal

      - name: Validate systemd unit
        run: systemd-analyze verify /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/baremetal.yml

      - name: Render Kubernetes manifests
        run: ansible-playbook tests/render.yml -e runtime=kubernetes

      - name: Create kind cluster for validation
        run: kind create cluster --name ci-${{ matrix.lane }} --image ${{ matrix.kind_image }} --wait 120s

      - name: Validate Kubernetes manifest (client)
        run: kubectl apply --dry-run=client --validate=true -f /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/kubernetes.yml

      - name: Validate Kubernetes manifest (server)
        run: kubectl apply --dry-run=server --validate=true -f /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/kubernetes.yml

      - name: Delete kind cluster
        if: always()
        run: kind delete cluster --name ci-${{ matrix.lane }} || true
