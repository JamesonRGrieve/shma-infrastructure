name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-and-validate:
    name: "Lint and validate (${{ matrix.lane }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lane: [stable, latest]
    env:
      SAMPLE_SERVICE_ID: sample-service
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f463c2d136add471c9f266e30e0f1c50

      - name: Display Python version
        run: python3 --version

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -r ci/requirements.txt

      - name: Install Ansible collections
        run: ansible-galaxy collection install -r ci/collections-${{ matrix.lane }}.yml

      - name: Verify Docker Compose availability
        run: docker compose version

      - name: Install kubectl
        run: |
          set -euo pipefail
          VERSION="${KUBECTL_VERSION}"
          if [ "$VERSION" = "latest" ]; then
            VERSION="$(curl -L -s https://dl.k8s.io/release/stable.txt)"
          fi
          curl -L --fail "https://dl.k8s.io/release/${VERSION}/bin/linux/amd64/kubectl" -o kubectl
          sudo install -m 0755 kubectl /usr/local/bin/kubectl
        env:
          KUBECTL_VERSION: ${{ matrix.lane == 'stable' && 'v1.29.3' || 'latest' }}

      - name: Install kind
        run: |
          set -euo pipefail
          curl -L --fail https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64 -o kind
          sudo install -m 0755 kind /usr/local/bin/kind

      - name: Create kind cluster
        run: kind create cluster --name ci --wait 120s

      - name: Validate schema definition
        run: python ci/validate_schema.py

      - name: Run yamllint
        run: |
          yamllint roles/common schemas templates/proxmox.yml.j2 templates/docker.yml.j2 templates/kubernetes.yml.j2 tests

      - name: Run ansible-lint
        run: ansible-lint roles/common tests/render.yml

      - name: Render Proxmox configuration
        run: ansible-playbook tests/render.yml -e runtime=proxmox

      - name: Validate Proxmox manifest
        run: yamllint /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/proxmox.yml

      - name: Render Docker Compose configuration
        run: ansible-playbook tests/render.yml -e runtime=docker

      - name: Validate Docker Compose manifest
        run: docker compose -f /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/docker.yml config

      - name: Render Podman Quadlet configuration
        run: ansible-playbook tests/render.yml -e runtime=podman

      - name: Validate Quadlet unit
        run: systemd-analyze verify /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/podman.yml

      - name: Render bare-metal systemd configuration
        run: ansible-playbook tests/render.yml -e runtime=baremetal

      - name: Validate systemd unit
        run: systemd-analyze verify /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/baremetal.yml

      - name: Render Kubernetes manifests
        run: ansible-playbook tests/render.yml -e runtime=kubernetes

      - name: Validate Kubernetes manifest (server-side)
        run: kubectl apply --dry-run=server --validate=true -f /tmp/ansible-runtime/${{ env.SAMPLE_SERVICE_ID }}/kubernetes.yml

      - name: Delete kind cluster
        if: always()
        run: kind delete cluster --name ci || true
