---
- name: Ensure OPNsense API credentials are provided for Nginx
  ansible.builtin.assert:
    that:
      - opnsense_nginx_api_key | length > 0
      - opnsense_nginx_api_secret | length > 0
    fail_msg: "opnsense_nginx_api_key and opnsense_nginx_api_secret must be provided to configure OPNsense Nginx"

- name: Enforce scoped OPNsense Nginx API key permissions
  ansible.builtin.assert:
    that:
      - "'root' not in (opnsense_nginx_api_key | lower)"
      - "'global' not in (opnsense_nginx_api_key | lower)"
    fail_msg: "opnsense_nginx_api_key must target the Nginx subsystem instead of root/global access"

- name: Build OPNsense Nginx payloads
  ansible.builtin.set_fact:
    opnsense_nginx_payload: "{{ edge_ingress_backends | default([]) | opnsense_nginx_payloads(bind_definitions, opnsense_nginx_tls_certificate_id) }}"
  vars:
    bind_definitions: "{{ opnsense_nginx_listen_addresses | default([{'address': '0.0.0.0', 'port': 80, 'tls': false}, {'address': '0.0.0.0', 'port': 443, 'tls': true}]) }}"

- name: Push Nginx configuration to OPNsense
  ansible.builtin.uri:
    url: "{{ opnsense_nginx_api_scheme }}://{{ opnsense_nginx_api_host }}:{{ opnsense_nginx_api_port }}/api/nginx/service/bulkImport"
    method: POST
    user: "{{ opnsense_nginx_api_key }}"
    password: "{{ opnsense_nginx_api_secret }}"
    force_basic_auth: true
    validate_certs: "{{ opnsense_nginx_api_verify_ssl }}"
    body_format: json
    status_code: 200
    body:
      upstreams: {{ opnsense_nginx_payload.upstreams }}
      servers: {{ opnsense_nginx_payload.servers }}
  register: opnsense_nginx_import
  no_log: true

- name: Apply Nginx configuration on OPNsense
  when: opnsense_nginx_apply_changes | bool
  ansible.builtin.uri:
    url: "{{ opnsense_nginx_api_scheme }}://{{ opnsense_nginx_api_host }}:{{ opnsense_nginx_api_port }}/api/nginx/service/reconfigure"
    method: POST
    user: "{{ opnsense_nginx_api_key }}"
    password: "{{ opnsense_nginx_api_secret }}"
    force_basic_auth: true
    validate_certs: "{{ opnsense_nginx_api_verify_ssl }}"
    status_code: 200
    body_format: json
    body: {}
  no_log: true
