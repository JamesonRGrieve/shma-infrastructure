---
- name: Load LXC configuration
  set_fact:
    lxc_config: "{{ lookup('file', runtime_config_path) | from_yaml }}"

- name: Ensure container_ip is defined
  assert:
    that:
      - lxc_config.container_ip is defined
      - lxc_config.container_ip | length > 0
    fail_msg: "Rendered Proxmox configuration must define container_ip"

- name: Set container IP facts
  set_fact:
    container_ip: "{{ lxc_config.container_ip }}"
    service_ip: "{{ lxc_config.container_ip }}"

- name: Require Proxmox API token credentials
  assert:
    that:
      - proxmox_api_token_id is defined
      - proxmox_api_token_secret is defined
    fail_msg: "Set proxmox_api_token_id and proxmox_api_token_secret for token-based authentication"

- name: Create LXC container
  community.general.proxmox:
    vmid: "{{ lxc_config.container.vmid }}"
    hostname: "{{ lxc_config.container.hostname }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    ostemplate: "{{ lxc_config.container.ostemplate }}"
    disk: "{{ lxc_config.container.disk }}"
    cores: "{{ lxc_config.container.cores }}"
    memory: "{{ lxc_config.container.memory }}"
    swap: "{{ lxc_config.container.swap }}"
    netif: "{{ lxc_config.container.netif }}"
    onboot: "{{ lxc_config.container.onboot }}"
    unprivileged: "{{ lxc_config.container.unprivileged }}"
    features: {{ lxc_config.container.features | default(omit) }}
    state: present

- name: Start container
  community.general.proxmox:
    vmid: "{{ lxc_config.container.vmid }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_token_id: "{{ proxmox_api_token_id }}"
    api_token_secret: "{{ proxmox_api_token_secret }}"
    api_host: "{{ proxmox_api_host }}"
    state: started

- name: Wait for container SSH
  wait_for:
    host: "{{ container_ip }}"
    port: 22
    timeout: 120

- name: Install packages in container
  delegate_to: "{{ container_ip }}"
  become: true
  apt:
    name: >-
      {% if item is mapping %}
      {{ item.name }}{% if item.version is defined %}={{ item.version }}{% endif %}
      {% else %}
      {{ item }}
      {% endif %}
    state: present
    update_cache: {{ lxc_config.setup.update_cache | default(true) | bool }}
  environment:
    DEBIAN_FRONTEND: noninteractive
  loop: "{{ lxc_config.setup.packages | default([]) }}"
  loop_control:
    label: "{{ item.name if item is mapping else item }}"
  when: lxc_config.setup.packages is defined and lxc_config.setup.packages | length > 0

- name: Write config files
  delegate_to: "{{ container_ip }}"
  become: true
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.path }}"
    mode: "{{ item.mode | default('0644') }}"
  loop: "{{ lxc_config.setup.config | default([]) }}"

- name: Enable and start services
  delegate_to: "{{ container_ip }}"
  become: true
  systemd:
    name: "{{ item.name }}"
    enabled: "{{ item.enabled | default(true) }}"
    state: "{{ item.state | default('started') }}"
    daemon_reload: true
  loop: "{{ lxc_config.setup.services | default([]) }}"

- name: Run additional setup commands
  delegate_to: "{{ container_ip }}"
  become: true
  command: "{{ item }}"
  loop: "{{ lxc_config.setup.commands | default([]) }}"
  when: lxc_config.setup.commands is defined and lxc_config.setup.commands | length > 0
