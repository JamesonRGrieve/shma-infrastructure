---
- name: Determine quadlet scope
  set_fact:
    quadlet_effective_scope: "{{ quadlet_scope | default('system') }}"
    quadlet_unit_name: "{{ service_unit_name | default(service_id) }}"

- name: Determine quadlet user home
  set_fact:
    quadlet_user_home: >-
      {{
        ansible_env.HOME
        | default(ansible_user_dir, true)
        | default(lookup('env', 'HOME'), true)
      }}
  when: quadlet_effective_scope == 'user'

- name: Ensure quadlet user home is available
  fail:
    msg: >-
      quadlet_scope is set to "user" but no HOME directory could be determined.
  when:
    - quadlet_effective_scope == 'user'
    - quadlet_user_home is not defined or (quadlet_user_home | length == 0)

- name: Resolve quadlet paths
  set_fact:
    quadlet_base_dir: "{{ (quadlet_effective_scope == 'user') | ternary(quadlet_user_home + '/.config/containers/systemd', '/etc/containers/systemd') }}"
    quadlet_env_path: "{{ ((quadlet_effective_scope == 'user') | ternary(quadlet_user_home + '/.config/containers/systemd', '/etc/containers/systemd')) + '/' + (service_name | default(service_id)) + '.env' }}"
    quadlet_secret_dir: "{{ ((quadlet_effective_scope == 'user') | ternary(quadlet_user_home + '/.config/containers/systemd/secrets', '/etc/containers/systemd/secrets')) }}"

- name: Prepare Quadlet secrets
  include_tasks: prepare_secrets.yml
  vars:
    runtime_secret_env_path: "{{ quadlet_env_path }}"
    runtime_secret_dir: "{{ quadlet_secret_dir }}"
    runtime_secret_write_env_file: true
    runtime_secret_become: {{ (quadlet_effective_scope == 'system') | bool }}
    runtime_secret_cleanup_entry_extra:
      become: {{ (quadlet_effective_scope == 'system') | bool }}

- name: Derive Quadlet secret helpers
  set_fact:
    quadlet_secret_env: "{{ runtime_secret_context.env }}"
    quadlet_secret_files: "{{ runtime_secret_context.files }}"

- name: Ensure quadlet directory exists
  file:
    path: "{{ quadlet_base_dir }}"
    state: directory
    mode: '0755'
  become: {{ (quadlet_effective_scope == 'system') | bool }}

- name: Copy Quadlet container file
  copy:
    src: "{{ runtime_config_path }}"
    dest: "{{ quadlet_base_dir }}/{{ quadlet_unit_name }}.container"
    mode: '0644'
  become: {{ (quadlet_effective_scope == 'system') | bool }}

- name: Validate Podman availability
  command: "{{ podman_binary | default('podman') }} --version"
  changed_when: false
  become: {{ (quadlet_effective_scope == 'system') | bool }}

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
    scope: "{{ quadlet_effective_scope }}"

- name: Enable and start container
  systemd:
    name: "{{ quadlet_unit_name }}"
    enabled: yes
    state: started
    scope: "{{ quadlet_effective_scope }}"
    daemon_reload: yes

- name: Ensure service IP for health checks
  ansible.builtin.include_tasks:
    file: set_service_ip.yml
