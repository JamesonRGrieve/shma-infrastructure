---
- name: Install Kubernetes prerequisites on Debian family
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
    state: present
    update_cache: true

- name: Resolve Kubernetes repository base URL
  ansible.builtin.set_fact:
    kubernetes_repo_base_url: "{{ kubernetes_repo_base | platform_map(ansible_distribution, ansible_os_family, default='') }}"

- name: Ensure apt key directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Kubernetes Release key
  ansible.builtin.get_url:
    url: "{{ kubernetes_repo_base_url }}Release.key"
    dest: /etc/apt/keyrings/kubernetes-release.key
    mode: '0644'

- name: Convert Kubernetes key to keyring format
  ansible.builtin.command: gpg --dearmor --yes -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kubernetes-release.key
  args:
    creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Configure Kubernetes apt repository
  ansible.builtin.copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: |
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] {{ kubernetes_repo_base_url }} /
    owner: root
    group: root
    mode: '0644'

- name: Update apt cache for Kubernetes packages
  ansible.builtin.apt:
    update_cache: true

- name: Install container runtime packages
  ansible.builtin.apt:
    name: "{{ kubernetes_cni_packages }}"
    state: present

- name: Install Kubernetes components
  ansible.builtin.apt:
    name: "{{ kubernetes_packages | platform_map(ansible_distribution, ansible_os_family, default=[]) }}"
    state: present

- name: Hold Kubernetes packages at current version
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ kubernetes_packages | platform_map(ansible_distribution, ansible_os_family, default=[]) }}"
