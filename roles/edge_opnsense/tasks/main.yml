---
- name: Ensure OPNsense API credentials are provided
  assert:
    that:
      - opnsense_api_key | length > 0
      - opnsense_api_secret | length > 0
    fail_msg: "opnsense_api_key and opnsense_api_secret must be provided to configure HAProxy"

- name: Enforce scoped OPNsense API key permissions
  ansible.builtin.assert:
    that:
      - "'root' not in (opnsense_api_key | lower)"
      - "'global' not in (opnsense_api_key | lower)"
    fail_msg: "opnsense_api_key must target the HAProxy subsystem instead of root/global access"

- name: Build OPNsense HAProxy payloads
  set_fact:
    opnsense_haproxy_payloads: >-
      {{ haproxy_payloads(
           edge_ingress_backends | default([]),
           opnsense_ingress_bind_addresses | default([]),
           provider='opnsense',
           certificate_ref=opnsense_tls_certificate_id
         )
      }}

- name: Extract OPNsense backend and frontend payloads
  set_fact:
    opnsense_backends: "{{ opnsense_haproxy_payloads.backends }}"
    opnsense_frontends: "{{ opnsense_haproxy_payloads.frontends }}"

- name: Push HAProxy configuration to OPNsense
  uri:
    url: "{{ opnsense_api_scheme }}://{{ opnsense_api_host }}:{{ opnsense_api_port }}/api/haproxy/service/bulkImport"
    method: POST
    user: "{{ opnsense_api_key }}"
    password: "{{ opnsense_api_secret }}"
    force_basic_auth: true
    validate_certs: "{{ opnsense_api_verify_ssl }}"
    body_format: json
    status_code: 200
    body: "{{ {'backends': opnsense_backends, 'frontends': opnsense_frontends} | to_json }}"
  register: opnsense_bulk_import
  no_log: true
  when: not (edge_ingress_skip_push | default(false) | bool)

- name: Apply HAProxy configuration on OPNsense
  when: opnsense_apply_changes and not (edge_ingress_skip_push | default(false) | bool)
  uri:
    url: "{{ opnsense_api_scheme }}://{{ opnsense_api_host }}:{{ opnsense_api_port }}/api/haproxy/service/reconfigure"
    method: POST
    user: "{{ opnsense_api_key }}"
    password: "{{ opnsense_api_secret }}"
    force_basic_auth: true
    validate_certs: "{{ opnsense_api_verify_ssl }}"
    status_code: 200
    body_format: json
    body: {}
  no_log: true
