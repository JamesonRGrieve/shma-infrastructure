{% set unit = service_unit | default({}) %}
{% set description = unit.description | default('Managed service for ' ~ (service_name | default(service_id))) %}
{% set after = unit.after | default(['network.target']) %}
{% set service_section = unit.service | default({'Type': 'simple', 'ExecStart': '/usr/bin/true'}) %}
{% set install_targets = unit.install_wanted_by | default(['multi-user.target']) %}
{% set security = service_security | default({}) %}
{% set restart_config = service_restart | default({}) %}
{% set mounts_config = mounts | default({}) %}
{% set ephemeral_mounts = mounts_config.ephemeral_mounts | default([]) %}
{% set default_apply_targets = ['docker', 'podman', 'kubernetes', 'proxmox', 'baremetal'] %}
{% set baremetal_tmpfs = namespace(items=[]) %}
{% for mount in ephemeral_mounts %}
  {% set apply_targets = mount.apply_to | default(default_apply_targets) %}
  {% if 'baremetal' in apply_targets %}
    {% set options = [] %}
    {% if mount.size is defined %}{% set _ = options.append('size=' ~ mount.size) %}{% endif %}
    {% if mount.mode is defined %}{% set _ = options.append('mode=' ~ mount.mode) %}{% endif %}
    {% set _ = baremetal_tmpfs.items.append({'path': mount.path, 'options': options}) %}
  {% endif %}
{% endfor %}
{% macro systemd_toggle(value, true_value='yes', false_value='no') -%}
  {%- if value is boolean -%}
    {{ true_value if value else false_value }}
  {%- else -%}
    {{ value }}
  {%- endif -%}
{%- endmacro %}
{% set read_only_root = security.read_only_root_filesystem if security.read_only_root_filesystem is defined else true %}
{% set private_tmp_default = security.private_tmp if security.private_tmp is defined else true %}
{% set protect_system_default = security.protect_system if security.protect_system is defined else (read_only_root | ternary('strict', 'full')) %}
{% set protect_home_default = security.protect_home if security.protect_home is defined else 'yes' %}
{% set protect_home_value = systemd_toggle(protect_home_default, 'yes', 'no') %}
{% set private_tmp_value = systemd_toggle(private_tmp_default, 'yes', 'no') %}
{% set protect_system_value = systemd_toggle(protect_system_default, 'strict', 'no') %}
{% set system_call_filter = security.system_call_filter if security.system_call_filter is defined else none %}
{% if system_call_filter is sequence and system_call_filter is not string %}
  {% set system_call_filter_value = system_call_filter | map('string') | join(' ') %}
{% else %}
  {% set system_call_filter_value = system_call_filter %}
{% endif %}

[Unit]
Description={{ description }}
{% for dependency in after %}
After={{ dependency }}
{% endfor %}

[Service]
{% for key, value in service_section.items() %}
{{ key }}={{ value }}
{% endfor %}
{% if 'PrivateTmp' not in service_section %}
PrivateTmp={{ private_tmp_value }}
{% endif %}
{% if 'ProtectSystem' not in service_section %}
ProtectSystem={{ protect_system_value }}
{% endif %}
{% if 'ProtectHome' not in service_section %}
ProtectHome={{ protect_home_value }}
{% endif %}
{% if system_call_filter_value %}
  {% if 'SystemCallFilter' not in service_section %}
SystemCallFilter={{ system_call_filter_value }}
  {% endif %}
{% endif %}
{% set restart_directives = [
  ('Restart', restart_config.restart if restart_config.restart is defined else none),
  ('RestartSec', restart_config.restart_sec if restart_config.restart_sec is defined else none),
  ('RestartMaxDelaySec', restart_config.restart_max_delay_sec if restart_config.restart_max_delay_sec is defined else none),
  ('RestartTimeoutSec', restart_config.restart_timeout_sec if restart_config.restart_timeout_sec is defined else none),
  ('RestartPreventExitStatus', restart_config.restart_prevent_exit_status if restart_config.restart_prevent_exit_status is defined else none),
  ('RestartForceExitStatus', restart_config.restart_force_exit_status if restart_config.restart_force_exit_status is defined else none),
  ('StartLimitIntervalSec', restart_config.start_limit_interval_sec if restart_config.start_limit_interval_sec is defined else none),
  ('StartLimitBurst', restart_config.start_limit_burst if restart_config.start_limit_burst is defined else none),
  ('StartLimitAction', restart_config.start_limit_action if restart_config.start_limit_action is defined else none)
] %}
{% for directive, value in restart_directives %}
  {% if value is not none and directive not in service_section %}
    {% if value is sequence and value is not string %}
{{ directive }}={{ value | join(' ') }}
    {% else %}
{{ directive }}={{ value }}
    {% endif %}
  {% endif %}
{% endfor %}
{% if baremetal_tmpfs.items %}
{% for mount in baremetal_tmpfs.items %}
TemporaryFileSystem={{ mount.path }}{% if mount.options %}:{{ mount.options | join(',') }}{% endif %}
{% endfor %}
{% endif %}

[Install]
{% for target in install_targets %}
WantedBy={{ target }}
{% endfor %}
