---
{% set container = service_container | default({}) %}
{% set pkg_list = service_packages | default([]) %}
{% set file_list = service_files | default([]) %}
{% set svc_list = service_services | default([]) %}
{% set cmd_list = service_commands | default([]) %}
{% set pkg_names = namespace(items=[]) %}
{% for pkg in pkg_list %}
  {% if pkg is string %}
    {% set pkg_name = pkg %}
  {% elif pkg.name is defined %}
    {% set pkg_name = pkg.name %}
  {% else %}
    {% set pkg_name = '' %}
  {% endif %}
  {% if pkg_name %}
    {% set _ = pkg_names.items.append(pkg_name | lower) %}
  {% endif %}
{% endfor %}
{% set feature_ns = namespace(value=None) %}
{% if container.features is defined %}
  {% if container.features %}
    {% if container.features is string %}
      {% set feature_ns.value = container.features %}
    {% elif container.features is sequence %}
      {% set feature_ns.value = container.features | join(',') %}
    {% else %}
      {% set feature_ns.value = container.features | string %}
    {% endif %}
  {% else %}
    {% set feature_ns.value = '' %}
  {% endif %}
{% endif %}
{% if feature_ns.value is none %}
  {% set nested_indicators = ['docker', 'docker-ce', 'docker.io', 'podman', 'podman-docker', 'containerd', 'buildah'] %}
  {% for indicator in nested_indicators %}
    {% if indicator in pkg_names.items %}
      {% set feature_ns.value = 'nesting=1,keyctl=1' %}
    {% endif %}
  {% endfor %}
{% endif %}
container_ip: "{{ service_ip }}"
container:
  vmid: "{{ container.vmid | default(service_id) }}"
  hostname: "{{ container.hostname | default(service_name | default(service_id)) }}"
  ostemplate: "{{ container.ostemplate | default(proxmox_template | default('local:vztmpl/ubuntu-24.04-standard_24.04-2_amd64.tar.zst')) }}"
  disk: "{{ container.disk | default(service_storage_gb | default(10)) }}"
  cores: "{{ container.cores | default(service_resources.cpu_cores | default(1)) }}"
  memory: "{{ container.memory | default(service_resources.memory_mb | default(512)) }}"
  swap: "{{ container.swap | default(service_resources.memory_mb | default(512)) }}"
  netif:
    net0: "name={{ container.interface | default('eth0') }},bridge={{ container.bridge | default('vmbr0') }},ip={{ service_ip }}/{{ container.cidr | default(24) }}{% if container.gateway is defined %},gw={{ container.gateway }}{% elif service_gateway is defined %},gw={{ service_gateway }}{% endif %}"
  onboot: {{ container.onboot | default('yes') }}
  unprivileged: {{ container.unprivileged | default('yes') }}


{% if feature_ns.value %}
  features: "{{ feature_ns.value }}"
{% endif %}

setup:
  packages:{% if pkg_list | length == 0 %} []{% else %}
{% for pkg in pkg_list %}
    - {{ pkg }}
{% endfor %}{% endif %}
  config:{% if file_list | length == 0 %} []{% else %}
{% for item in file_list %}
    - path: {{ item.path }}
      content: |
{{ item.content | indent(8, true) }}{% if item.mode is defined %}
      mode: {{ item.mode }}{% endif %}
{% endfor %}{% endif %}
  services:{% if svc_list | length == 0 %} []{% else %}
{% for svc in svc_list %}
    - name: {{ svc.name }}
      enabled: {{ svc.enabled | default(true) | ternary(true, false) }}
      state: {{ svc.state | default('started') }}
{% endfor %}{% endif %}
  commands:{% if cmd_list | length == 0 %} []{% else %}
{% for cmd in cmd_list %}
    - {{ cmd }}
{% endfor %}{% endif %}
